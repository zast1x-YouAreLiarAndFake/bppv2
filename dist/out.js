var o=class{info(i,s){console.log(`${i} ${s}`)}error(i,s){console.error(`${i} ${s}`)}warn(i,s){console.warn(`${i} ${s}`)}},t=new o;var n=class{prefix;constructor(i){this.prefix=i}log(i){t.info(this.prefix,i)}error(i){t.error(this.prefix,i)}warn(i){t.warn(this.prefix,i)}};var a=class extends n{plugins=[];inited=!1;constructor(){super("PluginManager")}init(){this.plugins=this.getPlugins();let i=this.plugins.map(s=>s.patches).flat();this.log("Initialized"),this.inited=!0}enableAll(){this.plugins.forEach(i=>i.onEnable())}disableAll(){this.plugins.forEach(i=>i.onDisable())}getPlugin(i){return this.plugins.find(s=>s.name===i)}getPlugins(){return this.plugins}hasInitialized(){return this.inited}},g=a;var p=class{subscriptions=new Map;subscribe(i,s){t.info("Events",`Subscribed to event '${i}'.`),this.subscriptions.has(i)||this.subscriptions.set(i,new Set),this.subscriptions.get(i).add(s)}dispatch(i,s){t.info("Events",`Dispatched event '${i}'.`),this.subscriptions.has(i)&&this.subscriptions.get(i).forEach(u=>u(s))}},h=new p,l=h;t.info("BPP","Starting up BPP...");var e=new g;e.init();l.dispatch("registrar.done",{message:"BPP is ready!",data:{pluginManager:{plugins:e.getPlugins().map(r=>({name:r.name,version:r.version,description:r.description,authors:r.authors})),pluginCount:e.getPlugins().length,inited:e.hasInitialized()}}});
